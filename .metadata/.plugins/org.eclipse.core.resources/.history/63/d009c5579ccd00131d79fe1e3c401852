/*
 * File: FacePamphletCanvas.java
 * -----------------------------
 * This class represents the canvas on which the profiles in the social
 * network are displayed.  NOTE: This class does NOT need to update the
 * display when the window is resized.
 */


import acm.graphics.*;
import acm.util.*;

import java.awt.*;
import java.util.*;

import acm.program.*;
import acm.graphics.*;
import acm.util.*;
import java.awt.event.*;
import javax.swing.*;


public class FacePamphletCanvas extends GCanvas 
					implements FacePamphletConstants {
	
	/** 
	 * Constructor
	 * This method takes care of any initialization needed for 
	 * the display
	 */
	public FacePamphletCanvas() {
		// You fill this in
	}

	
	/** 
	 * This method displays a message string near the bottom of the 
	 * canvas.  Every time this method is called, the previously 
	 * displayed message (if any) is replaced by the new message text 
	 * passed in.
	 */
	public void showMessage(String msg) {
		fpMessage.setLabel(msg);
		fpMessage.setFont(MESSAGE_FONT);
		add(fpMessage,LEFT_MARGIN,getHeight()-BOTTOM_MESSAGE_MARGIN);
		latestMessage = msg;
	}
	
	
	/** 
	 * This method displays the given profile on the canvas.  The 
	 * canvas is first cleared of all existing items (including 
	 * messages displayed near the bottom of the screen) and then the 
	 * given profile is displayed. The profile display includes the 
	 * name of the user from the profile, the corresponding image 
	 * (or an indication that an image does not exist), the status of
	 * the user, and a list of the user's friends in the social network.
	 */
	public void displayProfile(FacePamphletProfile profile) {
//		this.removeAll();
		removeAll();
		
		GLabel displayName = new GLabel(profile.getName());
		displayName.setFont(PROFILE_NAME_FONT);
		displayName.setColor(Color.BLUE);
		add(displayName,LEFT_MARGIN,(TOP_MARGIN + displayName.getHeight()));
		
		double imageY = TOP_MARGIN + displayName.getHeight() + IMAGE_MARGIN;
		
		GImage profileImage = profile.getImage();
		if (profileImage.equals(null)) {

			GRect noDisplayImage = new GRect(IMAGE_WIDTH, IMAGE_HEIGHT);
			noDisplayImage.setColor(Color.BLACK);
			add(noDisplayImage,LEFT_MARGIN,imageY);
		
			GLabel noImageText = new GLabel("No Image");
			noImageText.setFont(PROFILE_IMAGE_FONT);
			add(noImageText,(LEFT_MARGIN + IMAGE_WIDTH/2 - noImageText.getWidth()/2),(imageY + IMAGE_HEIGHT/2));
		} else {
			GImage displayImage = profile.getImage();
			profileImage.setSize(IMAGE_WIDTH, IMAGE_HEIGHT);
			add(profileImage,LEFT_MARGIN,imageY);
		}
		
		
//		if (!(profile.getImage().equals(null))) {
//			GImage displayImage = profile.getImage();
//			displayImage.setSize(IMAGE_WIDTH, IMAGE_HEIGHT);
//			add(displayImage,LEFT_MARGIN,imageY);
//		} else {
//			GRect noDisplayImage = new GRect(IMAGE_WIDTH, IMAGE_HEIGHT);
//			noDisplayImage.setColor(Color.BLACK);
//			add(noDisplayImage,LEFT_MARGIN,imageY);
//			
//			GLabel noImageText = new GLabel("No Image");
//			noImageText.setFont(PROFILE_IMAGE_FONT);
//			add(noImageText,(LEFT_MARGIN + IMAGE_WIDTH/2),(imageY + IMAGE_HEIGHT/2));
//		}

		
		if (!profile.getStatus().isEmpty()) {
		GLabel displayStatus = new GLabel(profile.getStatus());
		displayStatus.setFont(PROFILE_STATUS_FONT);
		add(displayStatus,LEFT_MARGIN,imageY + IMAGE_HEIGHT + STATUS_MARGIN);
		}

		GLabel friendHeader = new GLabel("Friends:");
		friendHeader.setFont(PROFILE_FRIEND_LABEL_FONT);
		add(friendHeader,getWidth()/2,imageY);

		double startFriends = imageY + friendHeader.getHeight();
		Iterator<String> iterateFriends = profile.getFriends();
		while (iterateFriends.hasNext()) {
			String friendName = iterateFriends.next();
			GLabel friend = new GLabel(friendName);
			friend.setFont(PROFILE_FRIEND_FONT);
			add(friend,getWidth()/2,startFriends);
			startFriends += (friend.getHeight() + 4);
		}
		
		
		showMessage(latestMessage);
		
	}

	private GLabel fpMessage = new GLabel("");

	private String latestMessage;

	//	private GLabel displayName;
	//private GImage displayImage;
	//private GLabel displayStatus;
//	private GRect noDisplayImage;
	//private GLabel noImageText;
//	private FacePamphletCanvas canvas;
	
}
